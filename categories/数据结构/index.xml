<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构 on shenchen</title>
    <link>https://shenchen123456.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 数据结构 on shenchen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 04 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://shenchen123456.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据结构--Dijkstra算法（逻辑实现）</title>
      <link>https://shenchen123456.github.io/post/dijkstra/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shenchen123456.github.io/post/dijkstra/</guid>
      <description>简介 ​ 迪杰斯特拉算法(Dijkstra)是由荷兰计算机科学家狄克斯特拉于1959 年提出的，因此又叫狄克斯特拉算法。是从一个顶点到其余各顶点的</description>
    </item>
    
    <item>
      <title>数据结构--快速排序</title>
      <link>https://shenchen123456.github.io/post/quicksort/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shenchen123456.github.io/post/quicksort/</guid>
      <description>1.基本思想 1.1 先从数列中取出一个数作为基准数 1.2 分区过程，将比这个数大的全放在右边，小的放在左边（分区） 1.3 再对左右分区重复第一，二步，直到各区</description>
    </item>
    
    <item>
      <title>数据结构---二叉树基本实现</title>
      <link>https://shenchen123456.github.io/post/binarytree/</link>
      <pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shenchen123456.github.io/post/binarytree/</guid>
      <description>二叉树模型 基本结点 public class Node { Object data; Node leftChild; Node rightChild; public Node(Object data, Node leftChild, Node rightChild) { super(); this.data = data; this.leftChild = leftChild; this.rightChild = rightChild; } } 二叉树接口 //二叉树接口 public interface Tree { public int size(); public boolean isEmpty(); public int getHeight(); public void preTraversal(); public void middleTraversal();</description>
    </item>
    
  </channel>
</rss>